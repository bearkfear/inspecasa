{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _formik = require(\"formik\");\n\nvar _nativeBase = require(\"native-base\");\n\nvar _store = _interopRequireDefault(require(\"../../store\"));\n\nvar _auth = require(\"../../configs/fire/auth\");\n\nvar _jsxFileName = \"/Users/enrico/Work/iscas/inspecasa/mobile/src/components/forms/Login.tsx\";\n\nvar LoginForm = function LoginForm() {\n  var store = (0, _react.useContext)(_store.default);\n\n  var _React$useState = _react.default.useState({\n    email: \"\",\n    password: \"\"\n  }),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 1),\n      initialValues = _React$useState2[0];\n\n  function onSubmit(values, helpers) {\n    helpers.setSubmitting(true);\n    var email = values.email;\n    var password = values.password;\n    (0, _auth.loginEmail)(email, password).then(function (res) {\n      store.setUser(res);\n    }).catch(function (e) {\n      alert(e);\n      helpers.setSubmitting(false);\n    });\n  }\n\n  return _react.default.createElement(_formik.Formik, {\n    initialValues: initialValues,\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 10\n    }\n  }, function (_ref) {\n    var handleChange = _ref.handleChange,\n        handleBlur = _ref.handleBlur,\n        handleSubmit = _ref.handleSubmit,\n        values = _ref.values,\n        isSubmitting = _ref.isSubmitting;\n    return _react.default.createElement(_nativeBase.Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, _react.default.createElement(_nativeBase.Item, {\n      stackedLabel: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, _react.default.createElement(_nativeBase.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, \"E-mail\"), _react.default.createElement(_nativeBase.Input, {\n      onChangeText: handleChange(\"email\"),\n      onBlur: handleBlur(\"email\"),\n      value: values.email,\n      placeholder: \"Digite seu email\",\n      autoCapitalize: \"none\",\n      autoCompleteType: \"email\",\n      textContentType: \"emailAddress\",\n      keyboardType: \"email-address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    })), _react.default.createElement(_nativeBase.Item, {\n      stackedLabel: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, _react.default.createElement(_nativeBase.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, \"Senha\"), _react.default.createElement(_nativeBase.Input, {\n      onChangeText: handleChange(\"password\"),\n      value: values.password,\n      onBlur: handleBlur(\"password\"),\n      placeholder: \"Digite sua senha\",\n      autoCapitalize: \"none\",\n      secureTextEntry: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    })), _react.default.createElement(_nativeBase.Button, {\n      full: true,\n      success: true,\n      onPress: handleSubmit,\n      disabled: isSubmitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, _react.default.createElement(_nativeBase.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, \"Acessar conta\")));\n  });\n};\n\nvar _default = LoginForm;\nexports.default = _default;","map":{"version":3,"sources":["/Users/enrico/Work/iscas/inspecasa/mobile/src/components/forms/Login.tsx"],"names":["LoginForm","store","Store","React","useState","email","password","initialValues","onSubmit","values","helpers","setSubmitting","then","res","setUser","catch","e","alert","handleChange","handleBlur","handleSubmit","isSubmitting"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AAQA;;AACA;;;;AAQA,IAAMA,SAAuB,GAAG,SAA1BA,SAA0B,GAAM;AAEpC,MAAMC,KAAK,GAAG,uBAAWC,cAAX,CAAd;;AAFoC,wBAGZC,eAAMC,QAAN,CAAsB;AAC5CC,IAAAA,KAAK,EAAE,EADqC;AAE5CC,IAAAA,QAAQ,EAAE;AAFkC,GAAtB,CAHY;AAAA;AAAA,MAG7BC,aAH6B;;AAQpC,WAASC,QAAT,CAAkBC,MAAlB,EAAiCC,OAAjC,EAAgE;AAC9DA,IAAAA,OAAO,CAACC,aAAR,CAAsB,IAAtB;AACA,QAAMN,KAAK,GAAGI,MAAM,CAACJ,KAArB;AACA,QAAMC,QAAQ,GAAGG,MAAM,CAACH,QAAxB;AAEA,0BAAWD,KAAX,EAAkBC,QAAlB,EAA4BM,IAA5B,CAAiC,UAAAC,GAAG,EAAI;AACtCZ,MAAAA,KAAK,CAACa,OAAN,CAAcD,GAAd;AACD,KAFD,EAEGE,KAFH,CAES,UAACC,CAAD,EAAO;AACdC,MAAAA,KAAK,CAACD,CAAD,CAAL;AACAN,MAAAA,OAAO,CAACC,aAAR,CAAsB,KAAtB;AACD,KALD;AAMD;;AAED,SAAO,6BAAC,cAAD;AACL,IAAA,aAAa,EAAEJ,aADV;AAEL,IAAA,QAAQ,EAAEC,QAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIJ;AAAA,QACCU,YADD,QACCA,YADD;AAAA,QAECC,UAFD,QAECA,UAFD;AAAA,QAGCC,YAHD,QAGCA,YAHD;AAAA,QAICX,MAJD,QAICA,MAJD;AAAA,QAKCY,YALD,QAKCA,YALD;AAAA,WAOG,6BAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,6BAAC,gBAAD;AAAM,MAAA,YAAY,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,6BAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,6BAAC,iBAAD;AACE,MAAA,YAAY,EAAEH,YAAY,CAAC,OAAD,CAD5B;AAEE,MAAA,MAAM,EAAEC,UAAU,CAAC,OAAD,CAFpB;AAGE,MAAA,KAAK,EAAEV,MAAM,CAACJ,KAHhB;AAIE,MAAA,WAAW,EAAC,kBAJd;AAKE,MAAA,cAAc,EAAC,MALjB;AAME,MAAA,gBAAgB,EAAC,OANnB;AAOE,MAAA,eAAe,EAAC,cAPlB;AAQE,MAAA,YAAY,EAAC,eARf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAcE,6BAAC,gBAAD;AAAM,MAAA,YAAY,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,6BAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,6BAAC,iBAAD;AACE,MAAA,YAAY,EAAEa,YAAY,CAAC,UAAD,CAD5B;AAEE,MAAA,KAAK,EAAET,MAAM,CAACH,QAFhB;AAGE,MAAA,MAAM,EAAEa,UAAU,CAAC,UAAD,CAHpB;AAIE,MAAA,WAAW,EAAC,kBAJd;AAKE,MAAA,cAAc,EAAC,MALjB;AAME,MAAA,eAAe,MANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAdF,EAyBE,6BAAC,kBAAD;AACE,MAAA,IAAI,MADN;AAEE,MAAA,OAAO,MAFT;AAGE,MAAA,OAAO,EAAEC,YAHX;AAIE,MAAA,QAAQ,EAAEC,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,6BAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBANF,CAzBF,CAPH;AAAA,GAJI,CAAP;AA+CD,CApED;;eAwEerB,S","sourcesContent":["import React, { useContext } from \"react\";\nimport { Formik, FormikHelpers } from \"formik\";\nimport {\n  Form,\n  Item,\n  Label,\n  Input,\n  Text,\n  Button,\n} from \"native-base\";\nimport Store from \"@store/index\";\nimport { loginEmail } from \"@configs/fire/auth\";\n\n\ninterface State {\n  email: string,\n  password: string,\n}\n\nconst LoginForm: React.FC<{}> = () => {\n\n  const store = useContext(Store);\n  const [initialValues] = React.useState<State>({\n    email: \"\",\n    password: \"\",\n  })\n\n  function onSubmit(values: State, helpers: FormikHelpers<State>) {\n    helpers.setSubmitting(true);\n    const email = values.email;\n    const password = values.password;\n\n    loginEmail(email, password).then(res => {\n      store.setUser(res);\n    }).catch((e) => {\n      alert(e);\n      helpers.setSubmitting(false);\n    });\n  }\n\n  return <Formik\n    initialValues={initialValues}\n    onSubmit={onSubmit}\n  >\n    {({\n      handleChange,\n      handleBlur,\n      handleSubmit,\n      values,\n      isSubmitting,\n    }) => (\n        <Form>\n          <Item stackedLabel>\n            <Label>E-mail</Label>\n            <Input\n              onChangeText={handleChange(\"email\")}\n              onBlur={handleBlur(\"email\")}\n              value={values.email}\n              placeholder=\"Digite seu email\"\n              autoCapitalize=\"none\"\n              autoCompleteType=\"email\"\n              textContentType=\"emailAddress\"\n              keyboardType=\"email-address\"\n            ></Input>\n          </Item>\n          <Item stackedLabel>\n            <Label>Senha</Label>\n            <Input\n              onChangeText={handleChange(\"password\")}\n              value={values.password}\n              onBlur={handleBlur(\"password\")}\n              placeholder=\"Digite sua senha\"\n              autoCapitalize=\"none\"\n              secureTextEntry\n            ></Input>\n          </Item>\n          <Button\n            full\n            success\n            onPress={handleSubmit}\n            disabled={isSubmitting}\n          >\n            <Text>Acessar conta</Text>\n          </Button>\n        </Form>\n      )}\n  </Formik>\n}\n\n\n\nexport default LoginForm;\n\n"]},"metadata":{},"sourceType":"script"}